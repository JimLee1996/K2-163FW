<%+header%>
<div class="setcontent advanced" id="remoteDiv">
	<div class="title-span"><span >LAN口设置</span></div>
	<div class="title-underline"></div>
	<div class="setlinediv">
		<span class="link-span3">LAN口IP地址：</span>
		<input  type="text" class="input-large" name="ipaddr" maxLength="15" value="<%=uci.get("network","lan","ipaddr")%>" id="ipaddr" style="padding-left: 10px;" />
	</div>
	<div class="setlinediv">
		<span class="link-span3">子网掩码：</span>
		<input  type="text" class="input-large" name="netmask" value="<%=uci.get("network","lan","netmask")%>" id="netmask" style="padding-left: 10px;" />
	</div>		
	<div class="setlinediv margintop-30">
		<div type="button" id="lansetsave" class="button-square-lg btndiv"><%:Save%></div>
	</div>
</div>
<input type="hidden" name="autosave" value="0" />
<!--modal-->
<div class="modal fade" id="lanset_modal">
  <div class="modal-dialog alert_dialog">
    <div class="modal-content alert_content">
      <div class="color-gray">
         <span><%:lanset restart%><br><%:lanset confirm restart%></span>
        <button type="button" class="button-square-sm" data-dismiss="modal" id="manualcomfire"><%:lanset_confirm%></button>
        <button type="button" class="button-square-sm" data-dismiss="modal" id="modal-cancel-btn"><%:lanset cancle%></button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script type="text/javascript">
	var lan_flag;
	function refreshpage()
	{
		var newip = $("#ipaddr").val();
		location.href = "http://" + newip + "/cgi-bin/luci/";
	}

	function cbi_validate_compile(code)
	{
		var pos = 0;
		var esc = false;
		var depth = 0;
		var stack = [ ];

		code += ',';

		for (var i = 0; i < code.length; i++)
		{
			if (esc)
			{
				esc = false;
				continue;
			}

			switch (code.charCodeAt(i))
			{
			case 92://'/'
				esc = true;
				break;

			case 40://'('
			case 44://','
				if (depth <= 0)
				{
					if (pos < i)
					{
						var label = code.substring(pos, i);
							label = label.replace(/\\(.)/g, '$1');
							label = label.replace(/^[ \t]+/g, '');
							label = label.replace(/[ \t]+$/g, '');

						if (label && !isNaN(label))
						{
							stack.push(parseFloat(label));
						}
						else if (label.match(/^(['"]).*\1$/))
						{
							stack.push(label.replace(/^(['"])(.*)\1$/, '$2'));
						}
						else if (typeof cbi_validators[label] == 'function')
						{
							stack.push(cbi_validators[label]);
							stack.push(null);
						}
						else
						{
							throw "Syntax error, unhandled token '"+label+"'";
						}
					}
					pos = i+1;
				}
				depth += (code.charCodeAt(i) == 40);
				break;

			case 41://')'
				if (--depth <= 0)
				{
					if (typeof stack[stack.length-2] != 'function')
						throw "Syntax error, argument list follows non-function";

					stack[stack.length-1] =
						arguments.callee(code.substring(pos, i));

					pos = i+1;
				}
				break;
			}
		}

		return stack;
	}

	function cbi_validate_field(cbid, optional, type,fieldtitle)
	{
	    var field = (typeof cbid == "string") ? document.getElementById(cbid) : cbid;
	    var vstack; try { vstack = cbi_validate_compile(type); } catch(e) { };

	    if (field && vstack && typeof vstack[0] == "function")
	    {
	        var validator = function()
	        {
	                var value = (field.options && field.options.selectedIndex > -1)
	                    ? field.options[field.options.selectedIndex].value : field.value;
	                if (!field.disabled)
	                {
	                    if(fieldtitle.substr(fieldtitle.length-1,1) == '：' || fieldtitle.substr(fieldtitle.length-1,1) == ':')
	                        fieldtitle = fieldtitle.substring(0, fieldtitle.length-1);
	                    if ((value.length == 0) && !optional)
	                    {
	                        return fieldtitle + error_msg[1][1];
	                    }  
						if(vstack[1] != null)                
	                        var errorinfo = vstack[0].apply(value,vstack[1]);
						else
						    var errorinfo = vstack[0].apply(value);
	                    if (!(((value.length == 0) && optional) || !(typeof(errorinfo) === "string")))
	                    {
	                        return fieldtitle + errorinfo;
	                    }
	                    
	                    if (!(((value.length == 0) && optional) || errorinfo))
	                    {
	                        return fieldtitle + error_msg[5][1];
	                    }
	                }
	            return true;
	        };
			return validator();
		}
	}

	function cbi_validate_form(cbid, optional, type,fieldtitle)
	{

		var info = cbi_validate_field(cbid, optional, type,fieldtitle);
		if (typeof(info)==="string")
		{                       
			Alert(info);
			return false;
		}
		else if (!info)
		{
			Alert("error");
			return false;
		}
	    return true;
	}

	$(function(){
		$("#lansetsave").click(function(){
			lan_flag = 0;				
   			var ipaddr = $("#ipaddr").val().split(".");		 
			if(cbi_validate_form("ipaddr",false,"ipv4","LAN口IP地址：")&&cbi_validate_form("netmask",false,"ipv4mask","子网掩码："))
			{
				var newip = $("input[name='ipaddr']").val();
				var oldip = "<%=uci.get("network","lan","ipaddr")%>"
				var lanmask = $("input[name='netmask']").val();
				var netmask = "<%=uci.get("network","lan","netmask")%>"
				
				if( lanmask == "255.255.255.255" )
				{
					Alert("<%:lanset_maskerror%>");
					lan_flag = 0;
					return;
				}
				if(newip != oldip || netmask != lanmask){
					lan_flag = 1;
				}else{
					lan_flag = 0;
				}
				var lanmaskNew = filterMask(lanmask);
				if (lanmaskNew != lanmask);
					$("input[name='netmask']").val(lanmaskNew);
				$("#lanset_modal").modal("show");	
			}
		});			

		$("#manualcomfire").click(function(){
			$("#lanset_modal").modal("hide");
			var  ip_addr = $("#ipaddr").val();
			var  net_mask = $("#netmask").val();
			if(lan_flag == 1)
			{
				start_progress_bar(40);								

				$.ajax({
					type:"post",
					url:"<%=REQUEST_URI%>",
					data:{
						ipaddr:ip_addr,
						netmask:net_mask,
						autosave:1
					}
				});				
				window.setTimeout(refreshpage, 38000);
			}
			else
			{
				start_progress_bar(10);
				window.setTimeout(refreshpage, 10000);
			}
		});
	});
</script>
<%+footer%>

